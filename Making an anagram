Making Anagram- Find the minimum number of character deletions required to make the two strings anagrams. 

We delete the following characters from our two strings to turn them into anagrams of each other:

Remove d and e from cde to get c.
Remove a and b from abc to get c.
We had to delete  characters to make both strings anagrams.

Output: 
'cde', 'abc' ==> 4
'absdjkvuahdakejfnfauhdsaavasdlkj', 'djfladfhiawasdkjvalskufhafablsdkashlahdfa' ==> 19

const createCharMap = (str) => {
  const charMap = {};
  for(let char of str){
      if(charMap[char]){
          charMap[char]++
      } else {
          charMap[char] = 1;
      }

  }
  return charMap;
}

const makingAnagrams = (string1, string2) => {
  const larger = string1.length >= string2.length ? string1 : string2;
  const smaller = string1.length < string2.length ? string1 : string2;
  const charMap = createCharMap(larger);
  let counter = 0;
  for(let char of smaller) {
      if(charMap[char] && charMap[char] > 0) {
          charMap[char]--;
          counter++;
      }
  }
  const diffOfSmaller = (smaller.length - counter);
  const diffOfLarger = (larger.length - smaller.length);
  return (2 * diffOfSmaller) + diffOfLarger;
}
